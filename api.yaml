swagger: '2.0'
info:
  version: '1.0'
  title: ULearnRegister
  description: This API handles registration for the ULearn application. The user can register as two differet roles, as "estudiante" or as "teacher". Also, a new role can be assigned to an existing user.
  contact: {}
host: 192.168.99.100:8080
basePath: /
securityDefinitions:
  auth:
    type: oauth2
    flow: implicit
    authorizationUrl: http://example.com/auth
    scopes: {}
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /roles:
    get:
      description: Gets all the roles stored at the role table in the database. In this case, "estudiante" and "teacher",
      summary: Get all roles
      tags:
      - RoleController
      operationId: Getallroles
      deprecated: false
      produces:
      - application/json;charset=UTF-8
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Getallrole'
          examples:
            application/json;charset=UTF-8:
            - id: 1
              roleName: Estudiante
            - id: 2
              roleName: Profesor
          headers:
            X-Content-Type-Options:
              type: string
              default: nosniff
            X-XSS-Protection:
              type: string
              default: 1; mode=block
            Cache-Control:
              type: string
              default: no-cache, no-store, max-age=0, must-revalidate
            Pragma:
              type: string
              default: no-cache
            Expires:
              type: string
              default: 0
            X-Frame-Options:
              type: string
              default: DENY
            Transfer-Encoding:
              type: string
              default: chunked
            Date:
              type: string
              default: Sun, 12 Apr 2020 21:51:20 GMT
  /registro/nuevo-usuario/rol/1:
    post:
      description: Register a new user in the user table in the database, associating the "estudiante" role to it.
      summary: Register student
      tags:
      - UserController
      operationId: Registerstudent
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/RegisterstudentRequest'
      responses:
        201:
          description: ''
          schema:
            type: object
          headers:
            X-Content-Type-Options:
              type: string
              default: nosniff
            X-XSS-Protection:
              type: string
              default: 1; mode=block
            Cache-Control:
              type: string
              default: no-cache, no-store, max-age=0, must-revalidate
            Pragma:
              type: string
              default: no-cache
            Expires:
              type: string
              default: 0
            X-Frame-Options:
              type: string
              default: DENY
            Content-Length:
              type: string
              default: 0
            Date:
              type: string
              default: Sun, 12 Apr 2020 21:50:58 GMT
  /registro/nuevo-usuario/rol/2:
    post:
      description: Register a new user in the user table in the database, associating the "profesor" role to it.
      summary: Register teacher
      tags:
      - UserController
      operationId: Registerteacher
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/RegisterteacherRequest'
      responses:
        201:
          description: ''
          schema:
            type: object
          headers:
            X-Content-Type-Options:
              type: string
              default: nosniff
            X-XSS-Protection:
              type: string
              default: 1; mode=block
            Cache-Control:
              type: string
              default: no-cache, no-store, max-age=0, must-revalidate
            Pragma:
              type: string
              default: no-cache
            Expires:
              type: string
              default: 0
            X-Frame-Options:
              type: string
              default: DENY
            Content-Length:
              type: string
              default: 0
            Date:
              type: string
              default: Sun, 12 Apr 2020 21:51:30 GMT
  /registro/usuario/rol/1:
    post:
      description: Gives a new role to an existing user. In this case, the role "estudiante" to the user "teacher"
      summary: Associate role for existing user
      tags:
      - UserController
      operationId: Associateroleforexistinguser
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AssociateroleforexistinguserRequest'
      responses:
        201:
          description: ''
          schema:
            type: object
          headers:
            X-Content-Type-Options:
              type: string
              default: nosniff
            X-XSS-Protection:
              type: string
              default: 1; mode=block
            Cache-Control:
              type: string
              default: no-cache, no-store, max-age=0, must-revalidate
            Pragma:
              type: string
              default: no-cache
            Expires:
              type: string
              default: 0
            X-Frame-Options:
              type: string
              default: DENY
            Content-Length:
              type: string
              default: 0
            Date:
              type: string
              default: Sun, 12 Apr 2020 21:53:36 GMT
  /login:
    post:
      description: Logins with correct username and password.
      summary: Successfull login
      tags:
      - UserController
      operationId: Successfulllogin
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/SuccessfullloginRequest'
      responses:
        200:
          description: ''
          schema:
            type: object
          headers:
            X-Content-Type-Options:
              type: string
              default: nosniff
            X-XSS-Protection:
              type: string
              default: 1; mode=block
            Cache-Control:
              type: string
              default: no-cache, no-store, max-age=0, must-revalidate
            Pragma:
              type: string
              default: no-cache
            Expires:
              type: string
              default: 0
            X-Frame-Options:
              type: string
              default: DENY
            Content-Length:
              type: string
              default: 0
            Date:
              type: string
              default: Sun, 12 Apr 2020 21:53:56 GMT
  /usuarios:
    get:
      description: Shows all the registrated users and all their corresponding info.
      summary: Get all users
      tags:
      - UserController
      operationId: Getallusers
      deprecated: false
      produces:
      - application/json;charset=UTF-8
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Getalluser'
          examples:
            application/json;charset=UTF-8:
            - id: 1
              names: USUARIO ESTUDIANTE1
              surnames: PRUEBA TEMPORAL1
              username: student1
            - id: 2
              names: USUARIO PROFESOR1
              surnames: PRUEBA TEMPORAL1
              username: teacher1
            - id: 3
              names: USUARIO ESTUDIANTE1
              surnames: PRUEBA TEMPORAL1
              username: student2
            - id: 4
              names: USUARIO PROFESOR1
              surnames: PRUEBA TEMPORAL1
              username: teacher2
            - id: 5
              names: USUARIO ESTUDIANTE1
              surnames: PRUEBA TEMPORAL1
              username: student12
          headers:
            X-Content-Type-Options:
              type: string
              default: nosniff
            X-XSS-Protection:
              type: string
              default: 1; mode=block
            Cache-Control:
              type: string
              default: no-cache, no-store, max-age=0, must-revalidate
            Pragma:
              type: string
              default: no-cache
            Expires:
              type: string
              default: 0
            X-Frame-Options:
              type: string
              default: DENY
            Transfer-Encoding:
              type: string
              default: chunked
            Date:
              type: string
              default: Sat, 18 Apr 2020 00:24:02 GMT
  /buscarUsuario/2:
    get:
      description: >-
        /buscarUsuario/{Id}


        Busca un usuario registrado por su Id, si este existe devuelve su informaci√≥n, de lo contrario devuelve 400 BAD REQUEST
      summary: Find user by ID
      tags:
      - UserController
      operationId: FinduserbyID
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
definitions:
  Getallrole:
    title: Getallrole
    example:
      id: 1
      roleName: Estudiante
    type: object
    properties:
      id:
        type: integer
        format: int32
      roleName:
        type: string
    required:
    - id
    - roleName
  RegisterstudentRequest:
    title: RegisterstudentRequest
    example:
      names: Usuario Estudiante4
      surnames: Prueba Temporal4
      id_documment: 12312312
      username: student4
      password: 12345678
    type: object
    properties:
      names:
        type: string
      surnames:
        type: string
      id_documment:
        type: string
      username:
        type: string
      password:
        type: string
    required:
    - names
    - surnames
    - id_documment
    - username
    - password
  RegisterteacherRequest:
    title: RegisterteacherRequest
    example:
      names: Usuario Profesor1
      surnames: Prueba Temporal1
      username: teacher1
      password: 87654321
    type: object
    properties:
      names:
        type: string
      surnames:
        type: string
      username:
        type: string
      password:
        type: string
    required:
    - names
    - surnames
    - username
    - password
  AssociateroleforexistinguserRequest:
    title: AssociateroleforexistinguserRequest
    example:
      username: teacher1
      password: 87654321
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
    - username
    - password
  SuccessfullloginRequest:
    title: SuccessfullloginRequest
    example:
      username: teacher1
      password: 87654321
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
    - username
    - password
  FailedloginRequest:
    title: FailedloginRequest
    example:
      username: teacher
      password: 87654321
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
    - username
    - password
  Getalluser:
    title: Getalluser
    example:
      id: 1
      names: USUARIO ESTUDIANTE1
      surnames: PRUEBA TEMPORAL1
      username: student1
    type: object
    properties:
      id:
        type: integer
        format: int32
      names:
        type: string
      surnames:
        type: string
      username:
        type: string
    required:
    - id
    - names
    - surnames
    - username
security:
- auth: []
tags:
- name: RoleController
  description: Requests referent to the controller for the roles.
- name: UserController
  description: Requests referents to the controller for the users.
